S3static sync tests
===================

We have a same directory and a test bucket (in a faux s3).

    >>> import os
    >>> os.mkdir('sample')
    >>> mkfile('sample/f1')
    >>> mkfile('sample/d1/f1')
    >>> mkfile('sample/d1/d2/f1')
    >>> mkfile('sample/f2')
    >>> mkfile('sample/d1/f2')
    >>> mkfile('sample/d1/d2/f2')

Now, we'll sync to our faux bucket:

    >>> import zc.s3staticsync
    >>> zc.s3staticsync.main([os.path.abspath('sample'), 'test'])

Let's check what we have in our bucket:

    >>> import boto.s3.connection
    >>> s3 = boto.s3.connection.S3Connection()
    >>> bucket = s3.get_bucket('test')

    >>> for k in bucket:
    ...     print k.key
    ...     k.check('sample')
    d1/d2/f1
    d1/d2/f2
    d1/f1
    d1/f2
    f1
    f2

Let's make some changes and make sure they're reflected:

    >>> import time; time.sleep(1)
    >>> mkfile('sample/f1')
    >>> mkfile('sample/d1/f1')
    >>> mkfile('sample/d1/d2/f1')
    >>> mkfile('sample/f3')
    >>> mkfile('sample/d1/f3')
    >>> mkfile('sample/d1/d2/f3')
    >>> os.remove('sample/f2')
    >>> os.remove('sample/d1/f2')
    >>> os.remove('sample/d1/d2/f2')

    >>> zc.s3staticsync.main([os.path.abspath('sample'), 'test'])
    >>> for k in bucket:
    ...     print k.key
    ...     k.check('sample')
    d1/d2/f1
    d1/d2/f3
    d1/f1
    d1/f3
    f1
    f3
